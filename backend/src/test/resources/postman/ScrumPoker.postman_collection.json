{
	"info": {
		"_postman_id": "5b55e52f-ef3c-49ec-aed7-837407347699",
		"name": "ScrumPoker Lias",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create tablemaster",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from onboarding TableMaster\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							"pm.test(\"create Tablemaster\", function () {",
							"    let messageString = pm.response.text();",
							"",
							"    let tablemasteridText = messageString.split(',')[0];",
							"    let tablemasterid = tablemasteridText.split(':');",
							"    pm.environment.set(\"tablemasterid\", tablemasterid[1].replace(/[\"]+/g, ''));",
							"",
							"    let gamekeyText = messageString.split(',')[1];",
							"    let gamekey = gamekeyText.split(':')",
							"    pm.environment.set(\"gamekey\", gamekey[1].replace(/[\"]+/g, ''));",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/createTablemaster/{{tablemastername}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"createTablemaster",
						"{{tablemastername}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"    pm.expect(player1.name).to.eql(pm.environment.get(\"tablemastername\"));",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"    ",
							"pm.test(\"create player\", function () {",
							"    let messageString = pm.response.text();",
							"",
							"    let playeridText = messageString.split(',')[0];",
							"    let playerid = playeridText.split(':');",
							"    pm.environment.set(\"playerid\", playerid[1].replace(/[\"]+/g, ''));",
							"",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/createPlayer/{{playername}}/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"createPlayer",
						"{{playername}}",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"    pm.expect(player1.name).to.eql(pm.environment.get(\"tablemastername\"));",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game start 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from GameStart\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameStart/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameStart",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "average Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('0.0');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/average/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"average",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"       var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set current value tm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('1');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setselectedcard/{{gamekey}}/{{tablemasterid}}/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setselectedcard",
						"{{gamekey}}",
						"{{tablemasterid}}",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "set current value tm 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('8');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setselectedcard/{{gamekey}}/{{tablemasterid}}/8",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setselectedcard",
						"{{gamekey}}",
						"{{tablemasterid}}",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "set current value Player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('5');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setselectedcard/{{gamekey}}/{{playerid}}/5",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setselectedcard",
						"{{gamekey}}",
						"{{playerid}}",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "game over",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from gameOver\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameover/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameover",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.eql(\"8\");",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.eql(\"5\");",
							"",
							"",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "average",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('6.5');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/average/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"average",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game start 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from GameStart\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameStart/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameStart",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"       var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "average Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('0.0');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/average/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"average",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set current value Player Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('13');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setselectedcard/{{gamekey}}/{{playerid}}/13",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setselectedcard",
						"{{gamekey}}",
						"{{playerid}}",
						"13"
					]
				}
			},
			"response": []
		},
		{
			"name": "game over 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from gameOver\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameover/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameover",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.eql(\"13\");",
							"",
							"",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "average 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('13.0');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/average/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"average",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set player mode tm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from changePlayerMode\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setplayermode/{{gamekey}}/{{tablemasterid}}/false",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setplayermode",
						"{{gamekey}}",
						"{{tablemasterid}}",
						"false"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(false);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.eql(\"13\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game start 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from GameStart\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameStart/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameStart",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(false);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set current value Player Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('8');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setselectedcard/{{gamekey}}/{{playerid}}/8",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setselectedcard",
						"{{gamekey}}",
						"{{playerid}}",
						"8"
					]
				}
			},
			"response": []
		},
		{
			"name": "game over 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from gameOver\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameover/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameover",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 17",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(false);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.eql(\"8\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "average 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('8.0');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/average/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"average",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set player mode player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from changePlayerMode\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setplayermode/{{gamekey}}/{{playerid}}/false",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setplayermode",
						"{{gamekey}}",
						"{{playerid}}",
						"false"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(false);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(false);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game start 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from GameStart\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameStart/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameStart",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(false);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(false);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game over 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from gameOver\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameover/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameover",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 11",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(false);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(false);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "average 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from setCurrentValue\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.have.body('0.0');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/average/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"average",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set player mode tm Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from changePlayerMode\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setplayermode/{{gamekey}}/{{tablemasterid}}/true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setplayermode",
						"{{gamekey}}",
						"{{tablemasterid}}",
						"true"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 12",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(false);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "set player mode player Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from changePlayerMode\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/players/setplayermode/{{gamekey}}/{{playerid}}/true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"players",
						"setplayermode",
						"{{gamekey}}",
						"{{playerid}}",
						"true"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 13",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game start 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from GameStart\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameStart/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameStart",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 15",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "game over 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response from gameOver\", function() {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tables/gameover/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"gameover",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 14",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"    var player2 = pm.response.json()[1];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"    pm.expect(player2.playing).to.eql(true);",
							"    pm.expect(player2.selectedCard).to.be.null;",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "offboarding player",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/offboarding/{{gamekey}}/{{playerid}}/false",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"offboarding",
						"{{gamekey}}",
						"{{playerid}}",
						"false"
					]
				}
			},
			"response": []
		},
		{
			"name": "getPlayers Copy 16",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"getAllPlayers\", function() {",
							"    var player1 = pm.response.json()[0];",
							"",
							"    pm.expect(player1.playing).to.eql(true);",
							"    pm.expect(player1.selectedCard).to.be.null;",
							"",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/getplayers/{{gamekey}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"getplayers",
						"{{gamekey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "offboarding tablemaster",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.ok;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "getPlayers",
						"value": "3loxk3uyJwxxMpOnSKJAMRjX4mKErY",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 2,\n        \"name\": \"dsafasdf\",\n        \"currentValue\": null,\n        \"playerMode\": true\n    }\n]"
				},
				"url": {
					"raw": "{{base_url}}/tables/offboarding/{{gamekey}}/{{tablemasterid}}/true",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tables",
						"offboarding",
						"{{gamekey}}",
						"{{tablemasterid}}",
						"true"
					]
				}
			},
			"response": []
		}
	]
}