name: 'Build and deploy'


on:
  pull_request:
    types:
      - closed
    branches: [ production ]

jobs:
  scrum-poker-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
        with:
          token: ${{secrets.VERSION_TOKEN}}


      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file


      - name: Generate and Set New Version
        run: mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} -DgenerateBackupPoms=false

      - name: Extract Maven project version
        run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec | sed 's/-SNAPSHOT$//')" >> $GITHUB_OUTPUT
        id: store-version

      - name: Set New Snapshot Version
        run: mvn build-helper:parse-version versions:set -DnewVersion=${{ steps.store-version.outputs.version}}-SNAPSHOT -DgenerateBackupPoms=false

      - name: Commit and Push Changes
        shell: bash
        env:
          COMMITPREFIX: '[VU]'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add . || {
            echo "No files were changed, so we did not commit anything"
            exit 1
          }
          git commit -m "$COMMITPREFIX Automated version update" || {
            echo "No changes to commit, skipping push"
            exit 0
          }
          git push -f origin production

      - name: Set up node.js version lts/fermium
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm --prefix frontend/ ci --legacy-peer-deps

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml -P build-for-docker

      - name: Log in to Quay registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.QUAY_REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.TAG }}:${{ steps.store-version.outputs.version}}-PROD


      - name: Setup Git user
        uses: fregante/setup-git-user@v2.0.1

      - name: Change Yaml
        uses: mikefarah/yq@master
        env:
          FILEPATH: ${{ vars.FILEPATH }}
          YAMLPATH: ${{ vars.YAML_PATH }}
          VERSION: ${{ vars.QUAY_URL }}:${{ steps.store-version.outputs.version}}-PROD
        with:
          cmd: yq -i "${YAMLPATH} = \"${VERSION}\"" ${FILEPATH}


      - name: Commit and Push Changes
        uses: fregante/setup-git-user@v2
        env:
          COMMITPREFIX: '[CTS]'
      - run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add ${{ vars.FILEPATH }} || {
            echo "No files were changed, so we did not commit anything"
            exit 1
          } && \
          git commit -m "$COMMITPREFIX Automated changes to ${{ vars.FILEPATH }}" && \
          git push origin ${{ vars.TARGET_REFERENCE }}
# add comment